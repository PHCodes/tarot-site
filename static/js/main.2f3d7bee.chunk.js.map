{"version":3,"sources":["logo.svg","serviceWorker.js","index.js","Headshot.js","HeadshotListMember.js","ResultsSection.js","HeadshotResult.js","Overview.js","HeadshotResultDesigner.js","Designer.js","App.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","Headshot","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","itemsToDisplayInHeadshot","renderedVersion","push","react_default","a","createElement","className","_i","length","currentItem","react","item","currentContent","id","name","state","textOfObject","itemsToDisplay","shouldhaveblacktext","textToColor","document","getElementById","textbackgroundcolor","style","color","e","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","err","return","offsetHeight","scrollHeight","overflowingDealing","SCROLLAMOUNT","DIRECTION","LOOP","behavior","height","setState","setTimeout","nameBox","nameElement","classList","remove","inactive","background-color","src","headshot","Component","HeadshotListMember","_ref","Link","to","concat","src_Headshot_0","ResultsSection","checkFiltered","itemsToFilterThrough","filterNamesAndValues","contentToSearch","filterResults","filter","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","trait","toString","toLowerCase","includes","haveSearched","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","memberOfAllItems","performFilter","handleFilter","event","preventDefault","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","currentTarget","fieldToSearch","type","searchResults","items","searchCompletedFunc","searchBySingleTrait","traitNameAndValue","clearSearch","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","getElementsByClassName","scrollTop","makeSearchFunctionAvailable","num","b","n","substr","str","Number","width","focus","click","_this2","x","listPreppedForRender","mainSection","class","href","onClick","closeNav","onSubmit","autoComplete","fontSize","cursor","openNav","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","src_HeadshotListMember","key","inWords","HeadshotResult","x0","unify","changedTouches","lock","clientX","move","dx","Math","sign","abs","leftLinkButton","rightLinkButton","reload","backgroundColor","primarycolor","secondarycolor","buttonsToColor","newImg","Image","picture","onload","console","log","replace","funcForTraitSearch","container","addEventListener","removeEventListener","charAt","toUpperCase","slice","leftLink","textDecoration","rightLink","setOfValues","applicationLinkVal","_loop","_React$createElement","target","defineProperty","getsSearchClick","capitalizeFirstLetter","display","tempField","getOwner","relatedElements","Overview","HeadshotResultDesigner","Designer","handleExample","newPreppedCode","example","exampleFieldToRender","preppedValue","substring","presentSetup","preppedCode","ReactDOM","render","src_HeadshotResultDesigner","traitName","getItemByTrait","selectCode","select","showCode","prevProps","prevState","propertiesToExemplify","list","objectsForInformation","property","dropboxContents","BrowserRouter","readOnly","App","searchCompleted","searchResultItems","searchedItemsList","relatedInfo","ownerList","find","currentTrait","itemToCheck","itemList","inactiveList","src_ResultsSection_0","searchFunc","searchFunctionAvailable","searchFunctionByTrait","mapStyles","styles","opacity","transform","scale","bounce","val","spring","stiffness","damping","zIndex","bounceTransition","atEnter","atLeave","atActive","fetchCurrentObj","itemName","newItem","fetchCurrentObjOwner","fetchCurrentObjInactive","fetchCurrentObjIncomplete","incompleteList","resultPages","_loop2","currentLink","es","path","component","src_HeadshotResult_0","correctObj","lastIndexOf","getLeftLink","getRightLink","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","owner","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","ownedItem","middleSection","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_loop3","_iterator8","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_loop4","_iterator9","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_loop5","_iterator10","HashRouter","exact","src_Overview_0","_ref2","src_Designer_0","_ref3","_ref4","_ref5","currentListofItems","Profiles","profileSet","newProfileItem","status","incomplete","array","temporaryValue","randomIndex","currentIndex","floor","random","shuffle","retiredPlayers","profileFinishedSet","ownerArray","inactiveArray","incompleteArray","player","setup","dataToAddTo","currentPresence","map","forEach","resultToCheck","result","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2f3d7bee.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.927b989f.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from './App';\r\nimport * as Profiles from './profiles.json';\r\nconst currentListofItems = Profiles.items;\r\nlet profileSet = [];\r\nfor (let x = 0; x < currentListofItems.length; x++) {\r\n    let newProfileItem = currentListofItems[x];\r\n    newProfileItem.headshot = newProfileItem.headshot;\r\n    if(newProfileItem.status){\r\n        if(newProfileItem.status.toLowerCase() == \"incomplete\"){\r\n            newProfileItem.incomplete = true;\r\n        }\r\n        if(newProfileItem.status.toLowerCase() == \"inactive\"){\r\n            newProfileItem.inactive = true;\r\n            \r\n        }\r\n    }\r\n    profileSet.push(newProfileItem);\r\n}\r\n\r\nfunction shuffle(array) {\r\n    var currentIndex = array.length, temporaryValue, randomIndex;\r\n  \r\n    // While there remain elements to shuffle...\r\n    while (0 !== currentIndex) {\r\n  \r\n      // Pick a remaining element...\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex -= 1;\r\n  \r\n      // And swap it with the current element.\r\n      temporaryValue = array[currentIndex];\r\n      array[currentIndex] = array[randomIndex];\r\n      array[randomIndex] = temporaryValue;\r\n    }\r\n  \r\n    return array;\r\n  }\r\n\r\n  profileSet = shuffle(profileSet);\r\n\r\nlet retiredPlayers = [\r\n]\r\n\r\nlet profileFinishedSet = [];\r\n\r\nlet ownerArray = [];\r\n\r\nlet inactiveArray = [];\r\n\r\nlet incompleteArray = [];\r\n\r\nfor (let x = 0; x < profileSet.length; x++) {\r\n    if (!retiredPlayers.includes(profileSet[x].player)) {\r\n\r\n        if (profileSet[x].inactive) {\r\n            inactiveArray.push(profileSet[x]);\r\n        }else if(profileSet[x].incomplete){\r\n            incompleteArray.push(profileSet[x]);\r\n        }else {\r\n            profileFinishedSet.push(profileSet[x]);\r\n        }\r\n    } \r\n}\r\n\r\nlet checkOwnerInArray = (item) => {\r\n    return ownerArray.map(function (owner) {\r\n        if (owner.name == item.player) {\r\n            return owner;\r\n        }\r\n    })\r\n}\r\n\r\n\r\nlet setup = (itemToCheck) => {\r\n    let currentPresence = checkOwnerInArray(itemToCheck);\r\n    let dataToAddTo;\r\n    if (currentPresence) {\r\n        currentPresence.forEach(function (resultToCheck) {\r\n            if (resultToCheck) {\r\n                dataToAddTo = resultToCheck;\r\n            }\r\n        })\r\n    }\r\n    if (!dataToAddTo) {\r\n        dataToAddTo = {\r\n            name: itemToCheck.player,\r\n            picture: itemToCheck.picture,\r\n            headshot: itemToCheck.headshot,\r\n            textbackgroundcolor: '#1b5181',\r\n            shouldhaveblacktext: false,\r\n            items: []\r\n        }\r\n        ownerArray.push(dataToAddTo);\r\n    }\r\n    dataToAddTo.items.push(itemToCheck);\r\n}\r\n\r\nprofileFinishedSet.map(function(result){setup(result) })\r\n\r\ninactiveArray.map(function(result){setup(result) })\r\nincompleteArray.map(function(result){setup(result)} )\r\nReactDOM.render(<App itemList={profileFinishedSet} incompleteList={incompleteArray}ownerList={ownerArray} inactiveList={inactiveArray} />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React, { Component, Fragment } from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\nimport ReactDOM from 'react-dom';\r\nimport './Headshot.css';\r\n\r\nclass Headshot extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let itemsToDisplayInHeadshot = [\"name\", \"title\", \"race\", \"affiliation\", \"power\"];\r\n        let renderedVersion = [];\r\n        renderedVersion.push(<div className=\"filler\"></div>);\r\n        for(var currentItem of itemsToDisplayInHeadshot){\r\n            renderedVersion.push(\r\n                <Fragment>{this.props.item[currentItem]} <br /></Fragment>);\r\n        }\r\n        var currentContent = (<span id={\"name-\" + this.props.item.name} className=\"name-focus invisible\">\r\n            {renderedVersion}\r\n        </span>)\r\n\r\n        this.state = {\r\n            textOfObject: currentContent,\r\n            itemsToDisplay: itemsToDisplayInHeadshot\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        if (!this.props.item.shouldhaveblacktext || this.props.item.shouldhaveblacktext == \"false\" || this.props.item.shouldhaveblacktext == \"No\" || this.props.item.shouldhaveblacktext == \"no\") {\r\n            let textToColor = document.getElementById(\"name-\" + this.props.item.name);\r\n            if (!this.props.item.textbackgroundcolor.match(/^(?:white|#fff(?:fff)?|rgba?\\(\\s*255\\s*,\\s*255\\s*,\\s*255\\s*(?:,\\s*1\\s*)?\\))$/i)) {\r\n\r\n                textToColor.style.color = 'white';\r\n\r\n            }\r\n        } else {\r\n            let textToColor = document.getElementById(\"name-\" + this.props.item.name);\r\n            if (this.props.item.textbackgroundcolor.match(/^(?:black|#000(?:000)?|rgba?\\(\\s*0\\s*,\\s*0\\s*,\\s*0\\s*(?:,\\s*1\\s*)?\\))$/i)) {\r\n\r\n                textToColor.style.color = 'white';\r\n            } else {\r\n                textToColor.style.color = 'black';\r\n            }\r\n        }\r\n        let textToColor = document.getElementById(\"name-\" + this.props.item.name);\r\n        //Check if overflowing.\r\n        function isEllipsisActive(e) {\r\n            return (e.offsetHeight < e.scrollHeight);\r\n        }\r\n        let renderedVersion = [];\r\n        for(var currentItem of this.state.itemsToDisplay){\r\n            renderedVersion.push(\r\n                <Fragment>{this.props.item[currentItem]} <br /></Fragment>);\r\n        }\r\n\r\n        if (isEllipsisActive(textToColor)) {\r\n            var overflowingDealing = (\r\n                <span id={\"name-\" + this.props.item.name} className=\"name-focus invisible\">\r\n                    <marquee className=\"marquee-headshot\"\r\n                        SCROLLAMOUNT=\"3\"\r\n                        DIRECTION=\"up\"\r\n                        LOOP=\"false\"\r\n                        behavior=\"scroll\" \r\n                        height=\"80%\">\r\n                        {renderedVersion}\r\n                    </marquee>\r\n                </span>\r\n            )\r\n            this.setState({textOfObject: overflowingDealing});\r\n        }\r\n    }\r\n    //Should have item in props.\r\n    render() {\r\n\r\n        let name = this.props.item.name\r\n        window.setTimeout(function () {\r\n            let nameBox = document.getElementById(\"name-box-\" + name);\r\n            let nameElement = document.getElementById(\"name-\" + name);\r\n            if (nameBox && nameElement) {\r\n                nameElement.classList.remove('invisible');\r\n                nameBox.classList.remove('invisible');\r\n\r\n            }\r\n        }, 500);\r\n        \r\n        var inactive = '';\r\n        if(this.props.item.inactive){\r\n            inactive = \"-inactive\";\r\n        }\r\n\r\n        return (\r\n            <span className={\"headshot\"+inactive}>\r\n                <span id={\"name-box-\" + this.props.item.name} className=\"name-box invisible\" style={{ 'background-color': this.props.item.textbackgroundcolor }}>\r\n                    {this.state.textOfObject}\r\n                </span>\r\n                <img className={\"image-box\"+inactive}  id=\"imgFull\" src={this.props.item.headshot} />\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Headshot; ","import React from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Route,\r\n    Link\r\n} from 'react-router-dom'\r\nimport Headshot from './Headshot';\r\n\r\nconst HeadshotListMember = ({ match, item }) => (\r\n        <Link to={`/${item.name}`}>\r\n            <Headshot item={item}/>\r\n        </Link>\r\n)\r\nexport default HeadshotListMember;","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\nimport ReactDOM from 'react-dom';\r\nimport HeadshotListMember from \"./HeadshotListMember\";\r\nimport './ResultsSection.css';\r\n\r\nclass ResultsSection extends Component {\r\n    //Should have items in props.\r\n    constructor(props) {\r\n        //Passed cameraAccess variable into props.\r\n        //Should have switchPageFunc in props to pass on.\r\n        super(props)\r\n        this.state = {\r\n            itemsToDisplay: [],\r\n            haveSearched: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        \r\n        let scroller = document.getElementById(\"main-color\");\r\n        \r\n        scroller.scrollTop = 0;\r\n        this.checkFiltered(this.props.items);\r\n        if (this.props.haveSearched) {\r\n            this.setState({ haveSearched: true });\r\n        }\r\n        this.props.makeSearchFunctionAvailable(this.searchBySingleTrait);\r\n    }\r\n\r\n    inWords(num) {\r\n        let a = ['', 'one ', 'two ', 'three ', 'four ', 'five ', 'six ', 'seven ', 'eight ', 'nine ', 'ten ', 'eleven ', 'twelve ', 'thirteen ', 'fourteen ', 'fifteen ', 'sixteen ', 'seventeen ', 'eighteen ', 'nineteen '];\r\n        let b = ['', '', 'twenty', 'thirty', 'forty', 'fifty', 'sixty', 'seventy', 'eighty', 'ninety'];\r\n\r\n        if ((num = num.toString()).length > 9) return 'overflow';\r\n        let n = ('000000000' + num).substr(-9).match(/^(\\d{2})(\\d{2})(\\d{2})(\\d{1})(\\d{2})$/);\r\n        if (!n) return; var str = '';\r\n        str += (n[1] != 0) ? (a[Number(n[1])] || b[n[1][0]] + ' ' + a[n[1][1]]) + 'crore ' : '';\r\n        str += (n[2] != 0) ? (a[Number(n[2])] || b[n[2][0]] + ' ' + a[n[2][1]]) + 'lakh ' : '';\r\n        str += (n[3] != 0) ? (a[Number(n[3])] || b[n[3][0]] + ' ' + a[n[3][1]]) + 'thousand ' : '';\r\n        str += (n[4] != 0) ? (a[Number(n[4])] || b[n[4][0]] + ' ' + a[n[4][1]]) + 'hundred ' : '';\r\n        str += (n[5] != 0) ? ((str != '') ? 'and ' : '') + (a[Number(n[5])] || b[n[5][0]] + ' ' + a[n[5][1]]) + 'only ' : '';\r\n        return str;\r\n    }\r\n\r\n    checkFiltered = (itemsToFilterThrough, filterNamesAndValues, contentToSearch) => {\r\n        let filterResults = [];\r\n        if (contentToSearch) {\r\n            for (var filter of filterNamesAndValues) {\r\n                if (filter[1]) {\r\n                    for (let item of itemsToFilterThrough) {\r\n                        for (var trait in item) {\r\n                            if (trait == filter[0]) {\r\n                                if (item[trait].toString().toLowerCase().includes(filter[1].toLowerCase())) {\r\n                                    if (!filterResults.includes(item)) {\r\n                                        filterResults.push(item);\r\n                                    }\r\n                                    if (!this.state.haveSearched) {\r\n                                        this.setState({ haveSearched: true });\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            for (var memberOfAllItems of itemsToFilterThrough) {\r\n                filterResults.push(memberOfAllItems);\r\n                this.setState({ haveSearched: false });\r\n            }\r\n\r\n        }\r\n        this.setState({ itemsToDisplay: filterResults });\r\n        return filterResults;\r\n    }\r\n\r\n    performFilter = (e) => {\r\n        //e.preventDefault();\r\n    }\r\n\r\n    handleFilter = (event) => {\r\n        event.preventDefault();\r\n        let filterNamesAndValues = [];\r\n        let contentToSearch = false;\r\n        for (var fieldToSearch of event.currentTarget) {\r\n            if (fieldToSearch.type == \"text\") {\r\n                filterNamesAndValues.push([fieldToSearch.name, fieldToSearch.value.toLowerCase()]);\r\n                if (fieldToSearch.value) {\r\n                    contentToSearch = true;\r\n                }\r\n            }\r\n        }\r\n        setTimeout(() => {\r\n            let searchResults = this.checkFiltered(this.props.items, filterNamesAndValues, contentToSearch);\r\n            this.props.searchCompletedFunc(searchResults);\r\n        }, 500)\r\n        return false;\r\n    }\r\n\r\n    searchBySingleTrait = (traitNameAndValue) => {\r\n        let searchResults = this.checkFiltered(this.props.items, traitNameAndValue, true);\r\n        this.props.searchCompletedFunc(searchResults);\r\n    }\r\n\r\n    clearSearch = (event) => {\r\n        for (var fieldToClear of document.getElementsByClassName(\"filter-input\")) {\r\n            fieldToClear.value = \"\";\r\n        }\r\n        this.props.searchCompletedFunc([]);\r\n    }\r\n\r\n    openNav() {\r\n        if (document.getElementById(\"mySidenav\").style.width == \"0px\" || !document.getElementById(\"mySidenav\").style.width) {\r\n            document.getElementById(\"mySidenav\").style.width = \"50vw\";\r\n            document.getElementById(\"first-selected\").focus();\r\n            document.getElementById(\"first-selected\").click();\r\n        } else {\r\n            document.getElementById(\"mySidenav\").style.width = \"0px\";\r\n        }\r\n    }\r\n\r\n    closeNav() {\r\n        document.getElementById(\"mySidenav\").style.width = \"0px\";\r\n    }\r\n    render() {\r\n        let x = 0;\r\n        let listPreppedForRender = [];\r\n\r\n        if (this.props.mainSection) {\r\n\r\n            listPreppedForRender.push(\r\n                <div id=\"mobile-menu\" className=\"mobile-menu\">\r\n                    <div id=\"mySidenav\" class=\"sidenav\">\r\n                        <a href=\"javascript:void(0)\" class=\"closebtn\" onClick={() => this.closeNav()}>&times;</a>\r\n                        <span class=\"filter-header\" id=\"search\">Search for Characters</span>\r\n                        <form onSubmit={(event) => this.handleFilter(event)} autoComplete=\"off\" id=\"filter-form\">\r\n                            <span class=\"filter-text\">Name</span><br />\r\n                            <input class=\"filter-input\" id=\"first-selected\" type=\"text\" name=\"name\" /><br />\r\n                            <span class=\"filter-text\" >Race</span><br />\r\n                            <input class=\"filter-input\" type=\"text\" name=\"race\" /><br />\r\n                            <span class=\"filter-text\" >Affiliation</span><br />\r\n                            <input class=\"filter-input\" type=\"text\" name=\"affiliation\" /><br />\r\n                            <span class=\"filter-text\" >Related</span><br />\r\n                            <input class=\"filter-input\" type=\"text\" name=\"related\" /><br />\r\n                            <span class=\"filter-text\" >Player</span><br />\r\n                            <input class=\"filter-input\" type=\"text\" name=\"player\" /><br />\r\n                            <br />\r\n                            <input className=\"filter-button\" type=\"submit\" value=\"Submit\" />\r\n                            {this.state.haveSearched ? <input className=\"filter-button\" type=\"submit\" value=\"Cancel Search\" onClick={(event) => this.clearSearch(event)} /> : ''}\r\n                        </form>\r\n                    </div>\r\n                    <span style={{ fontSize: '30px', cursor: 'pointer' }} onClick={() => this.openNav()}>&#128269;</span>\r\n                    {this.state.haveSearched ? <span style={{ fontSize: '30px', cursor: 'pointer', color: 'red'}} onClick={(event) => this.clearSearch(event)}>&#x2718;</span> : ''}\r\n                </div>\r\n            )\r\n        }\r\n\r\n        if (this.state.itemsToDisplay.length > 0) {\r\n            for (var item of this.state.itemsToDisplay) {\r\n                x = x + 1;\r\n                listPreppedForRender.push(<span className=\"headshot-box\"><HeadshotListMember match={this.props.match} item={item} key={this.inWords(x)} /></span>);\r\n            }\r\n        }\r\n\r\n        return listPreppedForRender;\r\n    }\r\n}\r\n\r\nexport default ResultsSection; ","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\nimport ReactDOM from 'react-dom';\r\nimport './HeadshotResult.css';\r\n\r\nclass HeadshotResult extends Component {\r\n\r\n    leftLinkButton;\r\n    rightLinkButton;\r\n    x0 = null;\r\n    unify = (e) => { return e.changedTouches ? e.changedTouches[0] : e };\r\n    lock = (e) => {\r\n        this.x0 = this.unify(e).clientX;\r\n    }\r\n    move = (e) => {\r\n        if (this.x0 || this.x0 === 0) {\r\n            let dx = this.unify(e).clientX - this.x0, s = Math.sign(dx);\r\n            //Significant move?\r\n            if (Math.abs(dx) > 50) {\r\n                //Leftmove\r\n                if (dx > 0) {\r\n                    if (this.leftLinkButton) {\r\n                        this.leftLinkButton.click();\r\n                    }\r\n                }\r\n                //Rightmove\r\n                if (dx < 0) {\r\n                    if (this.rightLinkButton) {\r\n                        this.rightLinkButton.click();\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    reload = () => {\r\n\r\n        document.getElementById(this.props.item.name).style.backgroundColor = this.props.item.primarycolor;\r\n        document.getElementById('main-color').style.backgroundColor = this.props.item.secondarycolor;\r\n        document.getElementById('inner-info-' + this.props.item.name).style.backgroundColor = this.props.item.textbackgroundcolor;\r\n        let buttonsToColor = document.getElementsByClassName('basic-button');\r\n        for (let button of buttonsToColor) {\r\n            button.style.backgroundColor = this.props.item.secondarycolor;\r\n        }\r\n        if (!this.props.item.shouldhaveblacktext || this.props.item.shouldhaveblacktext == \"false\" || this.props.item.shouldhaveblacktext == \"No\" || this.props.item.shouldhaveblacktext == \"no\" || this.props.item.shouldhaveblacktext == \"white\") {\r\n            let textToColor = document.getElementsByClassName('info-field');\r\n            if (!this.props.item.textbackgroundcolor.match(/^(?:white|#fff(?:fff)?|rgba?\\(\\s*255\\s*,\\s*255\\s*,\\s*255\\s*(?:,\\s*1\\s*)?\\))$/i)) {\r\n                for (let text of textToColor) {\r\n                    text.style.color = 'white';\r\n                }\r\n            }\r\n        } else {\r\n            let textToColor = document.getElementsByClassName('info-field');\r\n            if (this.props.item.textbackgroundcolor.match(/^(?:black|#000(?:000)?|rgba?\\(\\s*0\\s*,\\s*0\\s*,\\s*0\\s*(?:,\\s*1\\s*)?\\))$/i)) {\r\n                for (let text of textToColor) {\r\n                    text.style.color = 'white';\r\n                }\r\n            }\r\n        }\r\n        if (!this.props.item.shouldhaveblacktext || this.props.item.shouldhaveblacktext == \"false\" || this.props.item.shouldhaveblacktext == \"No\" || this.props.item.shouldhaveblacktext == \"no\") {\r\n            let textToColor = document.getElementsByClassName('basic-button');\r\n            for (let text of textToColor) {\r\n                text.style.color = 'white';\r\n            }\r\n\r\n        }\r\n        let newImg = new Image();\r\n        newImg.src = this.props.item.picture;\r\n        newImg.onload = () => {\r\n\r\n            console.log(newImg.height);\r\n            console.log(newImg.width);\r\n            console.log(newImg);\r\n            if (document.getElementById('inner-info-' + this.props.item.name)) {\r\n                if (newImg.width > newImg.height) {\r\n                    let currentImage = document.getElementById('img-' + this.props.item.name);\r\n                    currentImage.classList.replace('relevant-image-vertical', 'relevant-image-horizontal');\r\n                    if (Math.abs(newImg.width - newImg.height) < 50) {\r\n                        let currentImage = document.getElementById('img-' + this.props.item.name);\r\n                        currentImage.classList.replace('relevant-image-horizontal', 'relevant-image-square');\r\n\r\n                    }\r\n                }\r\n                else if (Math.abs(newImg.width - newImg.height) < 50) {\r\n                    let currentImage = document.getElementById('img-' + this.props.item.name);\r\n                    currentImage.classList.replace('relevant-image-vertical', 'relevant-image-square');\r\n\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.reload();\r\n        let scroller = document.getElementById(\"main-color\");\r\n\r\n        scroller.scrollTop = 0;\r\n        let container = document.getElementById(\"full-page\" + this.props.item.name);\r\n        this.leftLinkButton = document.getElementById('leftLink-' + this.props.item.name);\r\n        this.rightLinkButton = document.getElementById('rightLink-' + this.props.item.name);\r\n\r\n        container.addEventListener('touchstart', this.lock, false);\r\n        container.addEventListener('touchend', this.move, false);\r\n\r\n        container.addEventListener('mousedown', this.lock, false);\r\n        container.addEventListener('mouseup', this.move, false);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.reload();\r\n        document.getElementById('main-color').style.backgroundColor = '#1b5181';\r\n        let buttonsToColor = document.getElementsByClassName('basic-button');\r\n        for (let button of buttonsToColor) {\r\n            button.style.backgroundColor = '#1b5181';\r\n        }\r\n        if (!this.props.item.shouldhaveblacktext || this.props.item.shouldhaveblacktext == \"false\" || this.props.item.shouldhaveblacktext == \"No\" || this.props.item.shouldhaveblacktext == \"no\") {\r\n            let textToColor = document.getElementsByClassName('basic-button');\r\n            for (let text of textToColor) {\r\n                text.style.color = 'black';\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n        let container = document.getElementById(\"full-page\" + this.props.item.name);\r\n        container.removeEventListener('touchstart', this.lock);\r\n        container.removeEventListener('touchend', this.move);\r\n        container.removeEventListener('mousedown', this.lock);\r\n        container.removeEventListener('mouseup', this.move);\r\n    }\r\n\r\n    funcForTraitSearch = (filter, value) => {\r\n        //Mount roster.\r\n        let docLink = document.getElementById(\"roster-link\");\r\n        docLink.click()\r\n\r\n        setTimeout(() => {\r\n            this.props.searchBySingleTrait([[filter, value]]);\r\n        }, 100);\r\n    }\r\n\r\n    capitalizeFirstLetter(trait) {\r\n        return trait.charAt(0).toUpperCase() + trait.slice(1);\r\n    }\r\n\r\n    //Should have item in props.\r\n    render() {\r\n\r\n        let leftLinkButton = null;\r\n        let rightLinkButton = null;\r\n        let inactive = ''\r\n        if (this.props.leftLink(this.props.item.name)) {\r\n            leftLinkButton = <Link id={\"leftLink-\" + this.props.item.name} to={this.props.leftLink(this.props.item.name)} style={{ textDecoration: 'none' }}><div className=\"link-container left-link\"></div><div className=\"left-link side-link\"></div></Link>;\r\n        }\r\n        if (this.props.rightLink(this.props.item.name)) {\r\n            rightLinkButton = <Link id={\"rightLink-\" + this.props.item.name} to={this.props.rightLink(this.props.item.name)} style={{ textDecoration: 'none' }}><div className=\"link-container right-link\"></div><div className=\"right-link side-link\"></div></Link>\r\n        }\r\n        let setOfValues = [];\r\n        let applicationLinkVal = null;\r\n        for (let trait in this.props.item) {\r\n            if (trait != \"related\" && trait != \"inactive\" && trait != \"primarycolor\" && trait != \"secondarycolor\" && trait != \"textbackgroundcolor\" && trait != \"shouldhaveblacktext\" && trait != \"picture\" && trait != \"headshot\" && trait != \"items\" && trait != \"player\") {\r\n                if (trait == \"applicationlink\") {\r\n                    applicationLinkVal = (\r\n                        <div className=\"info-field\">\r\n                            <br />\r\n                            {<a style={{ 'cursor': 'pointer' }} target=\"_self\" style={{ color: \"inherit\", fontSize: \"18px\" }} href={this.props.item[trait.toString()]}>{this.props.item.name + \"'s Application\"}</a>}\r\n                            <br />\r\n                        </div>\r\n                    );\r\n                } else {\r\n                    let getsSearchClick = trait==\"affiliation\" || trait==\"race\";\r\n                    setOfValues.push(\r\n                        <div className=\"info-field\">\r\n                            <br />\r\n                            <span style={{}}>{this.capitalizeFirstLetter(trait) + ': '}</span>\r\n                            {(this.props.item[trait.toString()] ? <span style={getsSearchClick ? { 'cursor': 'pointer' } : null} onClick={getsSearchClick ? (filter, name) => this.funcForTraitSearch(trait.toString(), this.props.item[trait.toString()]) : () => {return null} }>{this.props.item[trait.toString()]}</span> : <span>'N/A'</span>)}\r\n                        </div>\r\n                    );\r\n                }\r\n            } else if (trait == \"items\") {\r\n                setOfValues.push(<div className=\"info-field\">\r\n                    Characters:\r\n                    <br />\r\n                    {(this.props.item[trait.toString()] ? <span style={{ 'display': 'inline-block', 'cursor': 'pointer' }} >{this.props.item[trait]}</span> : <span>'N/A'</span>)}\r\n                </div>);\r\n            } else if (trait == \"player\") {\r\n                if (!this.props.tempField) {\r\n                    setOfValues.push(<div className=\"owner-field \">\r\n                        <div><div>{this.capitalizeFirstLetter(trait) + ': ' + this.props.item[trait.toString()]}</div></div>\r\n                        <div className=\"owner-headshot\">{this.props.getOwner(this.props.item[trait], trait)}</div>\r\n                    </div>);\r\n                }\r\n            } else if (trait == \"related\") {\r\n                let relatedElements = [];\r\n                relatedElements.push(<div className=\"owner-headshot\">{this.props.getOwner(this.props.item[trait], trait)}</div>)\r\n                setOfValues.push(<div className=\"owner-field \">\r\n                    <div><div>{this.capitalizeFirstLetter(trait)}</div></div>\r\n                    {relatedElements};\r\n                </div>);\r\n            } else if (trait == \"inactive\") {\r\n                if (this.props.item[trait.toString()]) {\r\n                    inactive = \" inactive\";\r\n                }\r\n            }\r\n        }\r\n        if (applicationLinkVal) {\r\n            setOfValues.push(applicationLinkVal);\r\n        }\r\n\r\n        return (\r\n            <div id={\"full-page\" + this.props.item.name} className=\"full-results-page\">\r\n\r\n                <span className=\"result-page\" id={this.props.item.name}>\r\n\r\n                    <div className=\"inner-information\" >\r\n                        <center>\r\n                            <img src={this.props.item.picture} id={\"img-\" + this.props.item.name} className={\"relevant-image-vertical\" + inactive}>\r\n                            </img>\r\n                        </center>\r\n                        <br />\r\n                        <div className=\"text-field\" id={'inner-info-' + this.props.item.name}>\r\n\r\n                            {setOfValues}\r\n\r\n                        </div>\r\n                    </div>\r\n                </span>\r\n\r\n                {leftLinkButton ? leftLinkButton : null}\r\n                {rightLinkButton ? rightLinkButton : null}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HeadshotResult; ","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\nimport ReactDOM from 'react-dom';\r\nimport './Overview.css';\r\n\r\nclass Overview extends Component {\r\n    componetdidUpdate() {\r\n    }\r\n    //Should have item in props.\r\n    render() {\r\n        return (\r\n            <span className=\"overview-page-outer\">\r\n                <span className=\"overview-page-inner\">\r\n                </span>\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Overview;","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\nimport ReactDOM from 'react-dom';\r\nimport './HeadshotResult.css';\r\n\r\nclass HeadshotResultDesigner extends Component {\r\n\r\n    leftLinkButton;\r\n    rightLinkButton;\r\n    x0 = null;\r\n    unify = (e) => { return e.changedTouches ? e.changedTouches[0] : e };\r\n    lock = (e) => {\r\n        this.x0 = this.unify(e).clientX;\r\n    }\r\n    move = (e) => {\r\n        if (this.x0 || this.x0 === 0) {\r\n            let dx = this.unify(e).clientX - this.x0, s = Math.sign(dx);\r\n            //Significant move?\r\n            if (Math.abs(dx) > 50) {\r\n                //Leftmove\r\n                if (dx > 0) {\r\n                    if (this.leftLinkButton) {\r\n                        this.leftLinkButton.click();\r\n                    }\r\n                }\r\n                //Rightmove\r\n                if (dx < 0) {\r\n                    if (this.rightLinkButton) {\r\n                        this.rightLinkButton.click();\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    reload = () => {\r\n\r\n        document.getElementById(this.props.item.name).style.backgroundColor = this.props.item.primarycolor;\r\n        document.getElementById('main-color').style.backgroundColor = this.props.item.secondarycolor;\r\n        document.getElementById('inner-info-' + this.props.item.name).style.backgroundColor = this.props.item.textbackgroundcolor;\r\n        let buttonsToColor = document.getElementsByClassName('basic-button');\r\n        for (let button of buttonsToColor) {\r\n            button.style.backgroundColor = this.props.item.secondarycolor;\r\n        }\r\n        if (!this.props.item.shouldhaveblacktext || this.props.item.shouldhaveblacktext == \"false\" || this.props.item.shouldhaveblacktext == \"No\" || this.props.item.shouldhaveblacktext == \"no\" || this.props.item.shouldhaveblacktext == \"white\") {\r\n            let textToColor = document.getElementsByClassName('info-field');\r\n            if (!this.props.item.textbackgroundcolor.match(/^(?:white|#fff(?:fff)?|rgba?\\(\\s*255\\s*,\\s*255\\s*,\\s*255\\s*(?:,\\s*1\\s*)?\\))$/i)) {\r\n                for (let text of textToColor) {\r\n                    text.style.color = 'white';\r\n                }\r\n            }\r\n        } else {\r\n            let textToColor = document.getElementsByClassName('info-field');\r\n            if (this.props.item.textbackgroundcolor.match(/^(?:black|#000(?:000)?|rgba?\\(\\s*0\\s*,\\s*0\\s*,\\s*0\\s*(?:,\\s*1\\s*)?\\))$/i)) {\r\n                for (let text of textToColor) {\r\n                    text.style.color = 'white';\r\n                }\r\n            }\r\n        }\r\n        if (!this.props.item.shouldhaveblacktext || this.props.item.shouldhaveblacktext == \"false\"|| this.props.item.shouldhaveblacktext == \"No\" || this.props.item.shouldhaveblacktext== \"no\") {\r\n            let textToColor = document.getElementsByClassName('basic-button');\r\n            for (let text of textToColor) {\r\n                text.style.color = 'white';\r\n            }\r\n\r\n        }\r\n        let newImg = new Image();\r\n        newImg.src = this.props.item.picture;\r\n        newImg.onload =() => {\r\n\r\n            console.log(newImg.height);\r\n            console.log(newImg.width);\r\n            console.log(newImg);\r\n            if (document.getElementById('inner-info-' + this.props.item.name)) {\r\n                if (newImg.width > newImg.height) {\r\n                    let currentImage = document.getElementById('img-' + this.props.item.name);\r\n                    currentImage.classList.replace('relevant-image-vertical', 'relevant-image-horizontal');\r\n                    if (Math.abs(newImg.width-newImg.height) < 50){\r\n                        let currentImage = document.getElementById('img-' + this.props.item.name);\r\n                        currentImage.classList.replace('relevant-image-horizontal', 'relevant-image-square');\r\n                        \r\n                    }\r\n                }\r\n                else if (Math.abs(newImg.width-newImg.height) < 50){\r\n                    let currentImage = document.getElementById('img-' + this.props.item.name);\r\n                    currentImage.classList.replace('relevant-image-vertical', 'relevant-image-square');\r\n                    \r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.reload();\r\n        let scroller = document.getElementById(\"main-color\");\r\n        \r\n        scroller.scrollTop = 0;\r\n        let container = document.getElementById(\"full-page\" + this.props.item.name);\r\n        this.leftLinkButton = document.getElementById('leftLink-' + this.props.item.name);\r\n        this.rightLinkButton = document.getElementById('rightLink-' + this.props.item.name);\r\n\r\n        container.addEventListener('touchstart', this.lock, false);\r\n        container.addEventListener('touchend', this.move, false);\r\n\r\n        container.addEventListener('mousedown', this.lock, false);\r\n        container.addEventListener('mouseup', this.move, false);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.reload();\r\n        let buttonsToColor = document.getElementsByClassName('basic-button');\r\n        for (let button of buttonsToColor) {\r\n            button.style.backgroundColor = '#1b5181';\r\n        }\r\n        if (!this.props.item.shouldhaveblacktext || this.props.item.shouldhaveblacktext == \"false\" || this.props.item.shouldhaveblacktext == \"No\" || this.props.item.shouldhaveblacktext == \"no\") {\r\n            let textToColor = document.getElementsByClassName('basic-button');\r\n            for (let text of textToColor) {\r\n                text.style.color = 'black';\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    componentWillUnmount() {   \r\n            document.getElementById('main-color').style.backgroundColor = '#1b5181';\r\n        \r\n        let container = document.getElementById(\"full-page\" + this.props.item.name);\r\n        container.removeEventListener('touchstart', this.lock);\r\n        container.removeEventListener('touchend', this.move);\r\n        container.removeEventListener('mousedown', this.lock);\r\n        container.removeEventListener('mouseup', this.move);\r\n    }\r\n\r\n    funcForTraitSearch = (filter, value) => {\r\n        //Mount roster.\r\n        let docLink = document.getElementById(\"roster-link\");\r\n        docLink.click()\r\n\r\n        setTimeout(() => {\r\n            this.props.searchBySingleTrait([[filter, value]]);\r\n        }, 100);\r\n    }\r\n\r\n    capitalizeFirstLetter(trait) {\r\n        return trait.charAt(0).toUpperCase() + trait.slice(1);\r\n    }\r\n\r\n    //Should have item in props.\r\n    render() {\r\n\r\n        let leftLinkButton = null;\r\n        let rightLinkButton = null;\r\n        let inactive = ''\r\n        if (this.props.leftLink(this.props.item.name)) {\r\n            leftLinkButton = <Link id={\"leftLink-\" + this.props.item.name} to={this.props.leftLink(this.props.item.name)} style={{ textDecoration: 'none' }}><div className=\"link-container left-link\"></div><div className=\"left-link side-link\"></div></Link>;\r\n        }\r\n        if (this.props.rightLink(this.props.item.name)) {\r\n            rightLinkButton = <Link id={\"rightLink-\" + this.props.item.name} to={this.props.rightLink(this.props.item.name)} style={{ textDecoration: 'none' }}><div className=\"link-container right-link\"></div><div className=\"right-link side-link\"></div></Link>\r\n        }\r\n        let setOfValues = [];\r\n        let applicationLinkVal = null;\r\n        for (let trait in this.props.item) {\r\n            if (trait != \"inactive\" && trait != \"primarycolor\" && trait != \"secondarycolor\" && trait != \"textbackgroundcolor\" && trait != \"shouldhaveblacktext\" && trait != \"picture\" && trait != \"headshot\" && trait != \"items\" && trait != \"player\") {\r\n                if(trait == \"applicationlink\"){\r\n                    applicationLinkVal = (\r\n                        <div className=\"info-field\">\r\n                            <br />\r\n                            {<a style={{ 'cursor': 'pointer' }} target=\"_self\" style={{ color: \"inherit\", fontSize:\"18px\"}} href={this.props.item[trait.toString()]}>{this.props.item.name + \"'s Application\"}</a>}\r\n                            <br />\r\n                        </div>\r\n                    );\r\n                } else{\r\n                    setOfValues.push(\r\n                        <div className=\"info-field\">\r\n                            <br />\r\n                            <span style={{ }}>{this.capitalizeFirstLetter(trait) + ': '}</span>\r\n                            {(this.props.item[trait.toString()] ? <span style={{ 'cursor': 'pointer' }} onClick={(filter, name) => this.funcForTraitSearch(trait.toString(), this.props.item[trait.toString()])} >{this.props.item[trait.toString()]}</span> : <span>'N/A'</span>)}\r\n                        </div>\r\n                    );\r\n                }\r\n            } else if (trait == \"items\") {\r\n                setOfValues.push(<div className=\"info-field\">\r\n                Characters:\r\n                    <br />\r\n                    {(this.props.item[trait.toString()] ? <span style={{ 'display': 'inline-block', 'cursor': 'pointer' }} >{this.props.item[trait]}</span> : <span>'N/A'</span>)}\r\n                </div>);\r\n            }else if(trait == \"player\"){\r\n                if(!this.props.tempField){\r\n                    setOfValues.push(<div className=\"owner-field \">\r\n                    <div><div>{this.capitalizeFirstLetter(trait) + ': '+ this.props.item[trait.toString()]}</div></div>\r\n                        <div className=\"owner-headshot\">{ this.props.getOwner(this.props.item[trait], trait)}</div>\r\n                    </div>);\r\n                }\r\n            } else if(trait == \"inactive\"){\r\n                if(this.props.item[trait.toString()]){\r\n                    inactive = \" inactive\";\r\n                }\r\n            }\r\n        }\r\n        if(applicationLinkVal){\r\n            setOfValues.push(applicationLinkVal);\r\n        }\r\n\r\n        return (\r\n            <div id={\"full-page\" + this.props.item.name} className=\"full-results-page\">\r\n\r\n                <span className=\"result-page\" id={this.props.item.name}>\r\n\r\n                    <div className=\"inner-information\" >\r\n                        <center>\r\n                            <img src={this.props.item.picture} id={\"img-\" + this.props.item.name} className={\"relevant-image-vertical\" + inactive}>\r\n                            </img>\r\n                        </center>\r\n                        <br />\r\n                        <div className=\"text-field\" id={'inner-info-' + this.props.item.name}>\r\n\r\n                                {setOfValues}\r\n\r\n                        </div>\r\n                    </div>\r\n                </span>\r\n\r\n                {leftLinkButton ? leftLinkButton : null}\r\n                {rightLinkButton ? rightLinkButton : null}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HeadshotResultDesigner; ","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\nimport ReactDOM from 'react-dom';\r\nimport './Designer.css';\r\nimport HeadshotResult from './HeadshotResultDesigner';\r\n\r\nclass Designer extends Component {\r\n    //Should have item in props.\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            preppedCode: null,\r\n            showCode: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let scroller = document.getElementById(\"main-color\");\r\n\r\n        scroller.scrollTop = 0;\r\n    }\r\n\r\n    componentWillUnmount() {          \r\n        document.getElementById('main-color').style.backgroundColor = '#1b5181';\r\n        \r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        let buttonsToColor = document.getElementsByClassName('basic-button');\r\n        for (let button of buttonsToColor) {\r\n            button.style.backgroundColor = '#1b5181';\r\n        }\r\n        let textToColor = document.getElementsByClassName('basic-button');\r\n        for (let text of textToColor) {\r\n            text.style.color = 'black';\r\n        }\r\n    }\r\n\r\n    handleExample = (event) => {\r\n        event.preventDefault();\r\n        let filterNamesAndValues = [];\r\n        let contentToSearch = false;\r\n        let newPreppedCode = \"{\\n\";\r\n        let example = {};\r\n        for (var exampleFieldToRender of event.currentTarget) {\r\n            if (exampleFieldToRender.type == \"text\" || exampleFieldToRender.type == \"select-one\") {\r\n                if (exampleFieldToRender.value) {\r\n                    const preppedValue = exampleFieldToRender.name.toLowerCase().replace(/ /g, \"\");\r\n                    example[preppedValue] = exampleFieldToRender.value;\r\n                    newPreppedCode = newPreppedCode + `\\\"${preppedValue}\\\" : \\\"${exampleFieldToRender.value}\\\",\\n`;\r\n                } else {\r\n                    const preppedValue = exampleFieldToRender.name.toLowerCase().replace(/ /g, \"\");\r\n                    example[preppedValue] = 'N/A';\r\n                    newPreppedCode = newPreppedCode + `\\\"${preppedValue}\\\" : \\\"N\\\\A\\\",\\n`;\r\n                }\r\n            }\r\n        }\r\n        newPreppedCode = newPreppedCode.substring(0, newPreppedCode.length - 2);\r\n        newPreppedCode = newPreppedCode + `\\n}`\r\n        this.setState({ presentSetup: example});\r\n        this.setState({ preppedCode: newPreppedCode });\r\n\r\n        ReactDOM.render(<HeadshotResult item={example} match={this.props.match} tempField={true} getOwner={(trait, traitName) => this.props.getItemByTrait(trait, traitName)} leftLink={() => { return null }} rightLink={() => { return null }} />, document.getElementById('example'))\r\n\r\n        return false;\r\n    }\r\n\r\n    selectCode = () => {\r\n        document.getElementById(\"code-area\").focus();\r\n        document.getElementById(\"code-area\").select();\r\n    }\r\n\r\n    render() {\r\n        let affiliationList = {\r\n            name: \"Affiliation\",\r\n            list: ['', 'Rogue', 'Gotei United', 'Grand Sueki Army', 'Hebi Laboratories', 'Iramasha Union', 'Kokuryuteishi Empire', 'Lux Orior', 'Shadow Fall', 'Vandenreich', 'Vastime']\r\n        }\r\n\r\n        let raceList = {\r\n            name: \"Race\",\r\n            list: ['', 'Arrancar', 'Demon', 'Hollow', 'Human', 'Iramasha', 'Plus', 'Quincy', 'Shinigami', 'Sueki', 'Sugiura', 'Visored', 'Ziamichi']\r\n        }\r\n\r\n        let blackTextCheck = {\r\n            name: \"Should Have Black Text\",\r\n            list: ['Yes', 'No']\r\n        }\r\n        \r\n        let statusSet = {\r\n            name: \"Activity\",\r\n            list: [\"Active\",\"Inactive\",\"Incomplete\"]\r\n        }\r\n        \r\n        let propertiesToExemplify = [\r\n            \"Name\",\r\n            \"Title\",\r\n            raceList,\r\n            affiliationList,\r\n            \"Primary Color\",\r\n            \"Secondary Color\",\r\n            \"Text Background Color\",\r\n            blackTextCheck,\r\n            \"Traits\",\r\n            \"Power\",\r\n            \"Picture\",\r\n            \"Headshot\",\r\n            \"Player\",\r\n            \"Application Link\",\r\n            statusSet];\r\n        let objectsForInformation = [];\r\n        for (var property of propertiesToExemplify) {\r\n            if(!property.name){\r\n                objectsForInformation.push(<div className=\"example-section\"><span className=\"example-header\">{property}: </span><input type=\"text\" className=\"example-input\" name={property} /></div>)    \r\n            } else{\r\n                let dropboxContents = [];\r\n                for(var item of property.list){\r\n                    dropboxContents.push(<option value={item}>{item}</option>)\r\n                }\r\n                objectsForInformation.push(<div className=\"example-section\"><span className=\"example-header\">{property.name}: </span><select id={\"select-\"+property.name} className=\"example-input designer-select\" name={property.name} >{dropboxContents}</select></div>)\r\n            }}\r\n\r\n        return (\r\n            <Router>\r\n            <div>\r\n                <span className=\"designer-page-outer\">\r\n                    <span className=\"designer-page-inner\">\r\n                        <form onSubmit={(event) => this.handleExample(event)}>\r\n                            {objectsForInformation}\r\n                            <input className=\"basic-button example-button\" type=\"submit\" value=\"Submit\" />\r\n                        </form>\r\n                        <button id=\"display-code\" onClick={() => this.setState({ showCode: true })} className={\"basic-button\" + (!this.state.showCode ? \"\" : \" disappear-button\")} style={{ 'display': this.state.preppedCode ? 'flex' : 'none' }}>Generate Code</button>\r\n                        <textarea readOnly id=\"code-area\" style={{ 'display': this.state.showCode ? 'flex' : 'none' }} className=\"prepped-code\" value={this.state.preppedCode}></textarea>\r\n                        <button id=\"select-text\" style={{ 'display': this.state.showCode ? 'flex' : 'none' }} className=\"basic-button\" onClick={() => this.selectCode()}>Select Code</button>\r\n                    </span>\r\n                </span>\r\n\r\n                <div id=\"example\">\r\n                </div>\r\n            </div>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Designer;","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport logo from './logo.svg';\nimport './App.css';\nimport ResultsSection from './ResultsSection';\nimport HeadshotResult from './HeadshotResult';\nimport { spring, AnimatedRoute } from 'react-router-transition';\nimport Overview from './Overview';\nimport Designer from './Designer';\nimport {\n  HashRouter as Router,\n  Route,\n  Link\n} from 'react-router-dom'\n\nclass App extends Component {\n\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchedItemsList: []\n    }\n  }\n\n  searchCompleted = (searchResultItems) => {\n    this.setState({ searchedItemsList: searchResultItems });\n  }\n\n  getItemByTrait = (trait, traitName) => {\n    let relatedInfo = []\n    if (traitName == \"player\") {\n      relatedInfo.push(this.props.ownerList.find(x => x.name === trait));} \n    if (traitName == \"related\"){\n      for(let currentTrait of trait){\n        let itemToCheck = this.props.itemList.find(x => x.name === currentTrait);\n        if(itemToCheck){\n          relatedInfo.push(itemToCheck);\n        }\n        itemToCheck = this.props.inactiveList.find(x => x.name === currentTrait);\n        if(itemToCheck){\n          relatedInfo.push(itemToCheck);\n        }\n      }\n    }\n    return <ResultsSection makeSearchFunctionAvailable={(searchFunc) => this.searchFunctionAvailable(searchFunc)} searchCompletedFunc={(searchResultItems) => this.searchCompleted(searchResultItems)} haveSearched={this.state.searchedItemsList.length > 0 ? true : false} items={relatedInfo} />\n  \n  }\n\n\n  searchFunctionAvailable = (searchFunc) => {\n    this.searchFunctionByTrait = searchFunc;\n  }\n\n  searchFunctionByTrait;\n\n  componentDidMount() {\n  }\n  //Should have itemList in props. \n  render() {\n\n    // we need to map the `scale` prop we define below\n    // to the transform style property\n    function mapStyles(styles) {\n      return {\n        opacity: styles.opacity,\n        transform: `scale(${styles.scale})`,\n      };\n    }\n\n    // wrap the `spring` helper to use a bouncy config\n    function bounce(val) {\n\n      return spring(val, {\n        stiffness: 330,\n        damping: 22,\n        zIndex: 100,\n      });\n    }\n\n    // child matches will...\n    const bounceTransition = {\n\n      // start in a transparent, upscaled state\n      atEnter: {\n        opacity: 0,\n        scale: 1.2,\n      },\n      // leave in a transparent, downscaled state\n      atLeave: {\n        opacity: bounce(0),\n        scale: bounce(0.8),\n      },\n      // and rest at an opaque, normally-scaled state\n      atActive: {\n        opacity: bounce(1),\n        scale: bounce(1),\n      },\n    };\n\n    const Overview2 = () => (\n      <div>\n        <Overview />\n      </div>\n    )\n\n    const Roster = ({ match }) => (\n      <div className=\"roster-page\">\n        <h2>Roster</h2>\n        <ResultsSection key={\"roster\"} mainSection={true} match={match} makeSearchFunctionAvailable={(searchFunc) => this.searchFunctionAvailable(searchFunc)} searchCompletedFunc={(searchResultItems) => this.searchCompleted(searchResultItems)} haveSearched={this.state.searchedItemsList.length > 0 ? true : false} items={this.state.searchedItemsList.length > 0 ? this.state.searchedItemsList : this.props.itemList} />\n      </div>\n    )\n\n    const Designer2 = ({ match }) => (\n      <div>\n        <Designer key={\"designer\"} match={match} getItemByTrait={(trait, traitName) => this.getItemByTrait(trait, traitName)}/>\n      </div>\n    )\n\n    const Owners2 = ({ match }) => (\n      <div>\n        <h2>Players</h2>\n        <ResultsSection key={\"owners\"} match={match} makeSearchFunctionAvailable={(searchFunc) => this.searchFunctionAvailable(searchFunc)} searchCompletedFunc={(searchResultItems) => this.searchCompleted(searchResultItems)} haveSearched={this.state.searchedItemsList.length > 0 ? true : false} items={this.props.ownerList} />\n      </div>\n    )\n\n    const InactiveRoster = ({ match }) => (\n      <div>\n        <h2>Inactive</h2>\n        <ResultsSection key={\"owners\"} match={match} makeSearchFunctionAvailable={(searchFunc) => this.searchFunctionAvailable(searchFunc)} searchCompletedFunc={(searchResultItems) => this.searchCompleted(searchResultItems)} haveSearched={this.state.searchedItemsList.length > 0 ? true : false} items={this.props.inactiveList} />\n      </div>\n    )\n\n    const IncompleteRoster = ({ match }) => (\n      <div>\n        <h2>Coming Soon!</h2>\n        <ResultsSection key={\"owners\"} match={match} makeSearchFunctionAvailable={(searchFunc) => this.searchFunctionAvailable(searchFunc)} searchCompletedFunc={(searchResultItems) => this.searchCompleted(searchResultItems)} haveSearched={this.state.searchedItemsList.length > 0 ? true : false} items={this.props.incompleteList} />\n      </div>\n    )\n\n    const Topic = ({ match }) => (\n      <div>\n        <h3>{match.params.topicId}</h3>\n      </div>\n    )\n\n\n    //For the linking lists.\n    let fetchCurrentObj = (itemName) => {\n      for (let newItem of this.props.itemList) {\n        if (newItem.name == itemName) {\n          return newItem;\n        }\n      }\n    }\n\n    //For the linking lists.\n    let fetchCurrentObjOwner = (itemName) => {\n      for (let newItem of this.props.ownerList) {\n        if (newItem.name == itemName) {\n          return newItem;\n        }\n      }\n    }\n\n    //For the other lists.\n    let fetchCurrentObjInactive = (itemName) => {\n      for (let newItem of this.props.inactiveList) {\n        if (newItem.name == itemName) {\n          return newItem;\n        }\n      }\n    }\n\n    //For the other lists.\n    let fetchCurrentObjIncomplete = (itemName) => {\n      for (let newItem of this.props.incompleteList) {\n        if (newItem.name == itemName) {\n          return newItem;\n        }\n      }\n    }\n\n\n    let resultPages = []\n    let x = 0;\n\n\n    for (let item of this.props.ownerList) {\n      x = x + 1;\n      let currentLink = `/${item.name}`;\n\n      let getLeftLink = (item) => {\n        let leftLink = null;\n        let correctObj = fetchCurrentObjOwner(item);\n        let x = this.props.ownerList.lastIndexOf(correctObj);\n        if (this.props.ownerList[x - 1]) {\n          leftLink = `/${this.props.ownerList[x - 1].name}`;\n        }\n        return leftLink;\n      }\n\n      let getRightLink = (item) => {\n        let rightLink = null;\n        let correctObj = fetchCurrentObjOwner(item);\n        let x = this.props.ownerList.lastIndexOf(correctObj);\n        if (this.props.ownerList[x + 1]) {\n          rightLink = `/${this.props.ownerList[x + 1].name}`;\n        }\n        return rightLink;\n      }\n\n      resultPages.push(<AnimatedRoute\n        atEnter={bounceTransition.atEnter}\n        atLeave={bounceTransition.atLeave}\n        atActive={bounceTransition.atActive}\n        mapStyles={mapStyles}\n        className=\"route-wrapper\" path={currentLink} component={() => <HeadshotResult item={item} searchBySingleTrait={(traitNameAndValue) => this.searchFunctionByTrait(traitNameAndValue)} leftLink={(item) => getLeftLink(item)} rightLink={(item) => getRightLink(item)} />} />);\n    }\n\n    for (let owner of this.props.ownerList) {\n      let itemList = [];\n      if (owner.items[0]) {\n        if (owner.items[0].name) {\n          for (let ownedItem of owner.items) {\n            itemList.push(ownedItem);\n          }\n          owner.items = <ResultsSection middleSection={true} makeSearchFunctionAvailable={(searchFunc) => this.searchFunctionAvailable(searchFunc)} searchCompletedFunc={(searchResultItems) => this.searchCompleted(searchResultItems)} haveSearched={this.state.searchedItemsList.length > 0 ? true : false} items={itemList} />\n        }\n      }\n    }\n\n\n    for (let item of this.props.itemList) {\n      x = x + 1;\n      let currentLink = `/${item.name}`;\n\n      let getLeftLink = (item) => {\n        let leftLink = null;\n        let correctObj = fetchCurrentObj(item);\n        let x = this.props.itemList.lastIndexOf(correctObj);\n        if (this.state.searchedItemsList.length > 0) {\n          x = this.state.searchedItemsList.lastIndexOf(correctObj);\n          if (this.state.searchedItemsList[x - 1]) {\n            leftLink = `/${this.state.searchedItemsList[x - 1].name}`;\n          }\n        } else {\n          if (this.props.itemList[x - 1]) {\n            leftLink = `/${this.props.itemList[x - 1].name}`;\n          }\n        }\n        return leftLink;\n      }\n\n      let getRightLink = (item) => {\n        let rightLink = null;\n        let correctObj = fetchCurrentObj(item);\n        let x = this.props.itemList.lastIndexOf(correctObj);\n        if (this.state.searchedItemsList.length > 0) {\n          x = this.state.searchedItemsList.lastIndexOf(correctObj);\n          if (this.state.searchedItemsList[x + 1]) {\n            rightLink = `/${this.state.searchedItemsList[x + 1].name}`;\n          }\n        } else {\n          if (this.props.itemList[x + 1]) {\n            rightLink = `/${this.props.itemList[x + 1].name}`;\n          }\n        }\n        return rightLink;\n      }\n\n      resultPages.push(<AnimatedRoute\n        atEnter={bounceTransition.atEnter}\n        atLeave={bounceTransition.atLeave}\n        atActive={bounceTransition.atActive}\n        mapStyles={mapStyles}\n        className=\"route-wrapper\" path={currentLink} component={() => <HeadshotResult item={item} getOwner={(trait, traitName) => this.getItemByTrait(trait, traitName)} searchBySingleTrait={(traitNameAndValue) => this.searchFunctionByTrait(traitNameAndValue)} leftLink={(item) => getLeftLink(item)} rightLink={(item) => getRightLink(item)} />} />);\n    }\n\n\n    for (let item of this.props.inactiveList) {\n      x = x + 1;\n      let currentLink = `/${item.name}`;\n\n      let getLeftLink = (item) => {\n        let leftLink = null;\n        let correctObj = fetchCurrentObjInactive(item);\n        let x = this.props.inactiveList.lastIndexOf(correctObj);\n        if (this.state.searchedItemsList.length > 0) {\n          x = this.state.searchedItemsList.lastIndexOf(correctObj);\n          if (this.state.searchedItemsList[x - 1]) {\n            leftLink = `/${this.state.searchedItemsList[x - 1].name}`;\n          }\n        } else {\n          if (this.props.inactiveList[x - 1]) {\n            leftLink = `/${this.props.inactiveList[x - 1].name}`;\n          }\n        }\n        return leftLink;\n      }\n\n      \n    let getRightLink = (item) => {\n      let rightLink = null;\n      let correctObj = fetchCurrentObjInactive(item);\n      let x = this.props.inactiveList.lastIndexOf(correctObj);\n      if (this.state.searchedItemsList.length > 0) {\n        x = this.state.searchedItemsList.lastIndexOf(correctObj);\n        if (this.state.searchedItemsList[x + 1]) {\n          rightLink = `/${this.state.searchedItemsList[x + 1].name}`;\n        }\n      } else {\n        if (this.props.inactiveList[x + 1]) {\n          rightLink = `/${this.props.inactiveList[x + 1].name}`;\n        }\n      }\n      return rightLink;\n    }\n\n      resultPages.push(<AnimatedRoute\n        atEnter={bounceTransition.atEnter}\n        atLeave={bounceTransition.atLeave}\n        atActive={bounceTransition.atActive}\n        mapStyles={mapStyles}\n        className=\"route-wrapper\" path={currentLink} component={() => <HeadshotResult item={item} getOwner={(trait, traitName) => this.getItemByTrait(trait, traitName)} searchBySingleTrait={(traitNameAndValue) => this.searchFunctionByTrait(traitNameAndValue)} leftLink={(item) => getLeftLink(item)} rightLink={(item) => getRightLink(item)} />} />);\n    }\n\n    for (let item of this.props.incompleteList) {\n      x = x + 1;\n      let currentLink = `/${item.name}`;\n\n      let getLeftLink = (item) => {\n        let leftLink = null;\n        let correctObj = fetchCurrentObjIncomplete(item);\n        let x = this.props.incompleteList.lastIndexOf(correctObj);\n        if (this.state.searchedItemsList.length > 0) {\n          x = this.state.searchedItemsList.lastIndexOf(correctObj);\n          if (this.state.searchedItemsList[x - 1]) {\n            leftLink = `/${this.state.searchedItemsList[x - 1].name}`;\n          }\n        } else {\n          if (this.props.incompleteList[x - 1]) {\n            leftLink = `/${this.props.incompleteList[x - 1].name}`;\n          }\n        }\n        return leftLink;\n      }\n\n      \n    let getRightLink = (item) => {\n      let rightLink = null;\n      let correctObj = fetchCurrentObjIncomplete(item);\n      let x = this.props.incompleteList.lastIndexOf(correctObj);\n      if (this.state.searchedItemsList.length > 0) {\n        x = this.state.searchedItemsList.lastIndexOf(correctObj);\n        if (this.state.searchedItemsList[x + 1]) {\n          rightLink = `/${this.state.searchedItemsList[x + 1].name}`;\n        }\n      } else {\n        if (this.props.incompleteList[x + 1]) {\n          rightLink = `/${this.props.incompleteList[x + 1].name}`;\n        }\n      }\n      return rightLink;\n    }\n\n      resultPages.push(<AnimatedRoute\n        atEnter={bounceTransition.atEnter}\n        atLeave={bounceTransition.atLeave}\n        atActive={bounceTransition.atActive}\n        mapStyles={mapStyles}\n        className=\"route-wrapper\" path={currentLink} component={() => <HeadshotResult item={item} getOwner={(trait, traitName) => this.getItemByTrait(trait, traitName)} searchBySingleTrait={(traitNameAndValue) => this.searchFunctionByTrait(traitNameAndValue)} leftLink={(item) => getLeftLink(item)} rightLink={(item) => getRightLink(item)} />} />);\n    }\n\n    return (\n\n      <div className=\"App\">\n        <Router>\n          <div className=\"App\" id=\"main-color\">\n            <header className=\"App-header\">\n              <Link to=\"/\" className=\"link-button\" style={{ textDecoration: 'none' }}><button className=\"basic-button\">Overview</button></Link>\n              <Link to=\"/roster\" className=\"link-button\" style={{ textDecoration: 'none' }}><button className=\"basic-button\" id=\"roster-link\">Roster</button></Link>\n              <Link to=\"/designer\" className=\"link-button\" style={{ textDecoration: 'none' }}><button className=\"basic-button\">Designer</button></Link>\n              <Link to=\"/players\" className=\"link-button\" style={{ textDecoration: 'none' }}><button className=\"basic-button\">Players</button></Link>\n              <Link to=\"/inactive\" className=\"link-button\" style={{ textDecoration: 'none' }}><button className=\"basic-button\">Inactive</button></Link>\n              <Link to=\"/incomplete\" className=\"link-button\" style={{ textDecoration: 'none' }}><button className=\"basic-button\">Coming Soon</button></Link>\n\n            </header>\n            <div className=\"App-body\">\n              <AnimatedRoute\n                atEnter={bounceTransition.atEnter}\n                atLeave={bounceTransition.atLeave}\n                atActive={bounceTransition.atActive}\n                mapStyles={mapStyles}\n                className=\"route-wrapper\" exact path=\"/\" component={Overview2} />\n              <AnimatedRoute\n                atEnter={bounceTransition.atEnter}\n                atLeave={bounceTransition.atLeave}\n                atActive={bounceTransition.atActive}\n                mapStyles={mapStyles}\n                className=\"route-wrapper\" path=\"/roster\" component={Roster} />\n              <AnimatedRoute\n                atEnter={bounceTransition.atEnter}\n                atLeave={bounceTransition.atLeave}\n                atActive={bounceTransition.atActive}\n                mapStyles={mapStyles}\n                className=\"route-wrapper\" path=\"/designer\" component={Designer2} />\n\n              <AnimatedRoute\n                atEnter={bounceTransition.atEnter}\n                atLeave={bounceTransition.atLeave}\n                atActive={bounceTransition.atActive}\n                mapStyles={mapStyles}\n                className=\"route-wrapper\" path=\"/players\" component={Owners2} />\n\n              <AnimatedRoute\n                atEnter={bounceTransition.atEnter}\n                atLeave={bounceTransition.atLeave}\n                atActive={bounceTransition.atActive}\n                mapStyles={mapStyles}\n                className=\"route-wrapper\" path=\"/inactive\" component={InactiveRoster} />\n              <AnimatedRoute\n                atEnter={bounceTransition.atEnter}\n                atLeave={bounceTransition.atLeave}\n                atActive={bounceTransition.atActive}\n                mapStyles={mapStyles}\n                className=\"route-wrapper\" path=\"/incomplete\" component={IncompleteRoster} />\n              {resultPages}\n            </div>\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"sourceRoot":""}